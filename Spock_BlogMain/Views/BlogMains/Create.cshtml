@model Spock_BlogMain.Models.BlogMain

@{
    ViewBag.Title = "Create";
}

<style>
    .backgd {
        background-color: #b30000;
    }


    .btnclr {
        background-color: whitesmoke;
        border-style: solid;
        border-color: #b30000;
    }
</style>

<h4>Create Your Posts</h4>


@using (Html.BeginForm("Create", "BlogMains", null, FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal btnclr ">


    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     <div class="form-group ">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
        </div>

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="image" type="file" class="form-control" />
            @*@Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox ">
                @Html.EditorFor(model => model.Published)
                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default backgd " />
            </div>
        </div>
        <div class="col-md-12">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

}




@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    @*tinyMVC Editor*@

    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Body'
            });
        });
    </script>
}
